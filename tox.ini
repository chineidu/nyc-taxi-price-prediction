[tox]
envlist = coverage, test_global, lint, stylechecks, typechecks
skipsdist = True


[gh-actions]
python =
    3.10: test_global, lint, stylechecks, typechecks, publish_model


[testenv]
install_command = pip install {opts} {packages}
whitelist_externals =
    coverage

[testenv:coverage]
deps =
	-r{toxinidir}/test_requirements.txt
setenv =
	PYTHONPATH = {toxinidir}
	PYTHONHASHSEED=0
commands=
	python src/train.py
	coverage report -m 
	pytest \
	-s -vv --basetemp={envtmpdir}


[testenv:test_local]
description = This is used to test the model (locally)
envdir = {toxworkdir}/coverage
deps =
	{[testenv:coverage]deps}
setenv =
	{[testenv:coverage]setenv}
commands=
	{[testenv:coverage]commands}


[testenv:test_global]
description = This is used to test the model
envdir = {toxworkdir}/coverage
deps =
	{[testenv:coverage]deps}
setenv =
	{[testenv:coverage]setenv}	
commands=
	pytest -s -vv --basetemp={envtmpdir}


[testenv:train]
description = This is used to train the model
envdir = {toxworkdir}/coverage
deps =
	{[testenv:coverage]deps}
setenv =
	{[testenv:coverage]setenv}
commands=
	# python src/train.py
    python src/my_flow.py
    # python src/my_flow.py


[testenv:logger]
description = This is used to train the model
envdir = {toxworkdir}/coverage
deps =
	{[testenv:coverage]deps}
setenv =
	{[testenv:coverage]setenv}
commands=
	python src/train.py


[testenv:typechecks]
envdir = {toxworkdir}/coverage
deps =
	{[testenv:coverage]deps}
commands = {posargs:mypy src}


[testenv:stylechecks]
envdir = {toxworkdir}/coverage
deps =
	{[testenv:coverage]deps}
commands = {posargs:flake8 src tests}


[testenv:lint]
envdir = {toxworkdir}/coverage
deps =
	{[testenv:coverage]deps}
commands =
	isort src tests
	black src tests


[flake8]
exclude = .git, env
max-line-length = 100